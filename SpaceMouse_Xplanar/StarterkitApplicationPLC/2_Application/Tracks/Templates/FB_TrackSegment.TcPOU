<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.5">
  <POU Name="FB_TrackSegment" Id="{5e4d5d04-1207-4b70-a603-7644fa257533}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FB_TrackSegment EXTENDS FB_TrackBase IMPLEMENTS I_TRACK
VAR_INPUT
END_VAR
VAR_OUTPUT
END_VAR


VAR
	



END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Method Name="Initialize" Id="{e2e09471-aa42-43c4-8a45-984c97e72936}">
      <Declaration><![CDATA[METHOD Initialize : BOOL
VAR_INPUT
	bExecute 			: BOOL;
END_VAR

VAR_INST
	nState			: INT;
	fbR_TrigExecute : R_TRIG;

	TrackTable		: ARRAY[1..maxNumTrackPoints,1..3] OF LREAL;
	nPointIndex		: INT;
	nPointIndexA	: INT;	
	nPointIndexB	: INT;	
	idx1, idx2		: INT;
	nStartFromTrack	: INT;
	nEndAtTrack		: INT;
	bCloseLoop		: BOOL;	
	
	bTrackBuild		: BOOL;
	StartFromTrack	: I_Track;
	EndAtTrack		: I_Track;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[fbR_TrigExecute(CLK := bExecute);
IF fbR_TrigExecute.Q AND NOT bBusy THEN
	nState := 10;
	bBusy := TRUE;
	bError := FALSE;
END_IF


CASE nState OF 

	10:	// Init Track-Table
	
		// *******************************************************************
		// *** This code must be eddited according to machine/track layout ***
		// *******************************************************************
	
		nStartFromTrack	:= 0;		// 0 for the first track all others according to their predecessor!
	    	nEndAtTrack := 0;		// 0 for the first track all others according to their successor! 		
		     bCloseLoop := FALSE;	// TRUE for circular track	
			
			
		TrackTable[1,1] :=   0.0;	// x-koordinate
		TrackTable[1,2] :=   0.0;	// y-koordinate
		TrackTable[1,3] :=   0.0;	// c
		
		TrackTable[2,1] :=   0.0;	// x-koordinate
		TrackTable[2,2] :=   0.0;	// y-koordinate
		TrackTable[2,3] :=   0.0;	// c		
		
		TrackTable[3,1] :=   0.0;	// x-koordinate
		TrackTable[3,2] :=   0.0;	// y-koordinate
		TrackTable[3,3] :=   0.0;	// c		
	
		TrackTable[4,1] :=   0.0;	// x-koordinate
		TrackTable[4,2] :=   0.0;	// y-koordinate
		TrackTable[4,3] :=   0.0;	// c		
	
		TrackTable[5,1] :=   0.0;	// x-koordinate
		TrackTable[5,2] :=   0.0;	// y-koordinate
		TrackTable[5,3] :=   0.0;	// c		
	
		TrackTable[6,1] :=   0.0;	// x-koordinate
		TrackTable[6,2] :=   0.0;	// y-koordinate
		TrackTable[6,3] :=   0.0;	// c				
		
		nState := 20;
		
		
	20:	// Building the track
		IF nStartFromTrack > 0 THEN
			StartFromTrack := ipTrack[nStartFromTrack];
		END_IF
		
		IF nEndAtTrack > 0 THEN
			EndAtTrack := ipTrack[nStartFromTrack];
		END_IF

		bTrackBuild := FALSE;
		IF  nStartFromTrack > 0 
		AND     nEndAtTrack > 0
		THEN
			IF fbTrackStandard.BuildTrack(TrackTable, StartFromTrack.std, EndAtTrack.std, bCloseLoop) THEN
				bTrackBuild := TRUE;
			END_IF
		ELSIF nStartFromTrack > 0 THEN
			IF fbTrackStandard.BuildTrack(TrackTable, StartFromTrack.std, 0, bCloseLoop) THEN
				bTrackBuild := TRUE;
			END_IF
		ELSIF nEndAtTrack > 0 THEN
			IF fbTrackStandard.BuildTrack(TrackTable, 0, EndAtTrack.std, bCloseLoop) THEN
				bTrackBuild := TRUE;
			END_IF
		ELSE
			IF fbTrackStandard.BuildTrack(TrackTable, 0, 0, bCloseLoop) THEN
				bTrackBuild := TRUE;
			END_IF			
		END_IF
		
		IF bTrackBuild THEN
			nState := 30;	
		END_IF
	
		
	30: 	
		IF fbTrackStandard.P_BuildTrack.Done THEN
			nState := 100;
		END_IF
		
					 
	100: 	// Track build done
			fTrackLength := fbTrackStandard.GetLength();
				   bBusy := FALSE;
			  Initialize := TRUE;
			
			IF NOT bExecute THEN
				Initialize := FALSE;
				    nState := 0;
			END_IF
	
END_CASE






















]]></ST>
      </Implementation>
    </Method>
    <LineIds Name="FB_TrackSegment">
      <LineId Id="9" Count="0" />
    </LineIds>
    <LineIds Name="FB_TrackSegment.Initialize">
      <LineId Id="606" Count="1" />
      <LineId Id="841" Count="1" />
      <LineId Id="611" Count="2" />
      <LineId Id="615" Count="11" />
      <LineId Id="790" Count="1" />
      <LineId Id="731" Count="21" />
      <LineId Id="649" Count="1" />
      <LineId Id="652" Count="2" />
      <LineId Id="882" Count="54" />
      <LineId Id="584" Count="18" />
      <LineId Id="5" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>